import org.apache.tools.ant.filters.ReplaceTokens

compileJava {
    options.compilerArgs += ['-parameters']
    options.fork = true
    options.encoding = 'UTF-8'
}

dependencies {
    // Other modules
    compileOnly project(':NMS:Wrapper')

    // Referenced dependencies
    compileOnly "io.papermc.paper:paper-api:$spigotVersion-R0.1-SNAPSHOT"
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'org.jetbrains:annotations:23.1.0'

    // Mojang dependencies
    compileOnly 'com.mojang:authlib:1.5.21'

    // Misc other
    compileOnly 'net.coreprotect:coreprotect:19.4'
    compileOnly 'de.diddiz:logblock:1.16.1.1'
    compileOnly 'dev.frankheijden.insights:Insights:6.19.2'
    compileOnly 'com.github.brcdev-minecraft:shopgui-api:3.0.0', {
        exclude group: 'org.spigotmc'
    }
    compileOnly('net.citizensnpcs:citizens-main:2.0.35-SNAPSHOT').transitive = false
    compileOnly 'com.nisovin.shopkeepers:ShopkeepersAPI:2.15.1'
    compileOnly 'com.magmaguy:EliteMobs:9.1.9'
    //compileOnly 'org.mineacademy.plugin:Boss-API:3.8.0'
    compileOnly('io.lumine:Mythic-Dist:5.6.1')
    compileOnly ('com.gmail.nossr50.mcMMO:mcMMO:2.2.012') {
        exclude group: 'com.comphenix.protocol'
    }
    compileOnly 'com.jacob_vejvoda:infernalmobs:6.6'
    compileOnly 'simplepets.brainsynder:Version_1.21.4:5.0-BUILD-279'
    compileOnly 'com.bgsoftware:SuperiorSkyblockAPI:2024.4'
    compileOnly 'com.bgsoftware:WildChestsAPI:2.2.3'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.4', {
        exclude group: 'org.spigotmc'
        exclude group: 'com.sk89q.worldedit'
    }
    compileOnly 'dev.rosewood:roseloot:1.2.0'

    // Dependencies that will be shaded into the jar
    api "dev.rosewood:rosegarden:$rosegardenVersion"
    api "dev.rosewood:rosegarden-compatibility:$rosegardenVersion"
    api 'dev.rosewood:guiframework:1.1.5-SNAPSHOT'
}

processResources {
    from (sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter ReplaceTokens, tokens: ["version": project.property("version")]
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
}

shadowJar {
    archiveClassifier.set(null)
}
